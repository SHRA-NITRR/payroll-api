USE [VYPAK]
GO
/****** Object:  StoredProcedure [dbo].[Proc_PFGROUP_MST]    Script Date: 23/02/2019 11:32:18 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
ALTER PROCEDURE [dbo].[Proc_PFGROUP_MST]
 (
  
 @PFGroup_Id INT=null, 
 @PFGroup_Name VARCHAR(50)=null, 
 @PF_No VARCHAR(50)=NULL,
 @DBA_File_Code VARCHAR(50)=NULL,
 @File_Extension VARCHAR(50)=NULL,
 @Address VARCHAR(50)=NULL,
 @Created_By INT=NULL,
 @Operation VARCHAR(20)=NULL,
 @OUT_CODE	VARCHAR(30)=null,
 @ok VARCHAR (40)= NULL
 
)
 AS
 SET NOCOUNT ON 
 
 
  IF @Operation='INSERT'
   BEGIN
     DECLARE @PFGroup_Code VARCHAR(20)
	SET @PFGroup_Id=(SELECT ISNULL(MAX(PFGroup_Id),0)+1 FROM PFGroup_Mst)
	SET @PFGroup_Code=(SELECT 'PFG'+CAST(ISNULL(MAX(PFGroup_Id),0)+1 AS VARCHAR(20)) FROM PFGroup_Mst)
	INSERT INTO PFGroup_Mst(PFGroup_Id,PFGroup_Code,PFGroup_Name,PF_No,DBA_File_Code,File_Extension,Address,Created_By)
    VALUES
     (@PFGroup_Id,@PFGroup_Code,@PFGroup_Name,@PF_No,@DBA_File_Code,@File_Extension,@Address,@Created_By)
    END
   
   
IF @Operation='UPDATE'

   BEGIN
   
   UPDATE PFGroup_Mst SET PFGroup_Name=@PFGroup_Name,PF_No=@PF_No,DBA_File_Code=@DBA_File_Code,File_Extension=@File_Extension,Address=@Address,
   Modified_By= @Created_By, Modified_On = GETDATE() 
   WHERE PFGroup_Id=@PFGroup_Id
   END
   
   IF @Operation='SELECT'
   BEGIN
   SELECT  PFGroup_Id,PFGroup_Code,PF_No,DBA_File_Code,File_Extension,Address,PFGroup_Name FROM PFGroup_Mst where Is_Deleted=0
   END
   
   IF @Operation='SELECTBYID'
   BEGIN
   SELECT  PFGroup_Id,PFGroup_Code,PF_No,DBA_File_Code,File_Extension,Address,PFGroup_Name FROM PFGroup_Mst where PFGroup_Id=@PFGroup_Id AND Is_Deleted=0
   END
   
  IF @Operation = 'DELETE'
   BEGIN
   UPDATE PFGroup_Mst SET Is_Deleted = 1 WHERE PFGroup_Id=@PFGroup_Id
   END
   
   IF @Operation='SEARCH'
   BEGIN
  select * from PFGroup_Mst where Is_Deleted=0 and PFGroup_Id between @OUT_CODE and @OUT_CODE+15 
   END
    
   
 
 BEGIN
    SET NOCOUNT ON
    BEGIN TRANSACTION
    BEGIN TRY
        SET @ok = 'true';
        COMMIT TRANSACTION
    END TRY

    BEGIN CATCH
        set @ok = 'false';
        ROLLBACK TRANSACTION
    END CATCH
END
